#!/bin/bash

# {{- if .darwin }}

command_exists() {
  command -v "$@" >/dev/null 2>&1
}

main() {
  # Homebrew
  printf -- "\n%sHomebrew%s\n"
  if ! command_exists brew || [ $CI ]; then
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    # {{- if eq .chezmoi.arch "arm64" }}
    eval "$(/opt/homebrew/bin/brew shellenv)"
    # {{- else }}
    eval "$(/usr/local/bin/brew shellenv)"
    # {{- end }}
  else
    printf -- "%sHomebrew already installed, skipping.%s\n"
  fi

  # Homebrew Formulae
  printf -- "\n%sHomebrew Formulae%s\n"
  if command_exists brew; then
    brew cleanup
    brew doctor
    brew bundle --file=~/.Brewfile --verbose --no-upgrade || true
    brew unlink php
    brew link --force --overwrite php@8.2
  else
    printf -- "%sbrew command not found, skipping.%s\n"
  fi

  # Volta
  printf -- "\n%sVolta%s\n"
  if ! command_exists volta; then
    curl https://get.volta.sh | bash -s -- --skip-setup
    source "${HOME}/.profile"
  else
    printf -- "%sVolta already installed, skipping.%s\n"
  fi

  # Node.JS
  printf -- "\n%sNode.JS%s\n"
  if command_exists volta; then
    volta install node
    volta install pnpm
    volta install yarn@1
    npm install -g @aws-amplify/cli @hiratake/aws-mfa
  else
    printf -- "%svolta command not found, skipping.%s\n"
  fi

  # Docker
  printf -- "\n%sDocker%s\n"
  if command_exists limactl; then
    limactl start --tty=false ~/.config/lima/docker.yml
    mkdir -p ~/.docker/cli-plugins
    ln -sfn $(which docker-compose) ~/.docker/cli-plugins/docker-compose
  else
    printf -- "%slimactl command not found, skipping.%s\n"
  fi

  # AWS
  printf -- "\n%sAWS%s\n"
  if command_exists pipx; then
    pipx install git-remote-codecommit
  else
    printf -- "%spipx command not found, skipping.%s\n"
  fi

  # Next Steps
  printf -- "\n%sNext Steps%s\n"
  if command_exists aws; then
    printf -- "%s- Run the following commands to settings up AWS:%s\n"
    printf -- "%s    aws configure%s\n"
    if command_exists aws-mfa; then
      printf -- "%s    aws-mfa%s\n"
    fi
  fi

  printf -- "%s\nDone.%s\n"
}

main "$@"

# {{- end }}
